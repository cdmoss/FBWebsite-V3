@page
@model MHFoodBank.Web.Areas.Admin.Pages.CompletedModel
@inject Microsoft.AspNetCore.Identity.UserManager<MHFoodBank.Common.AppUser> userManager
@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = "Time Sheets";
}
<form method="post">
    <partial name="_AdminStatusMessage" for="StatusMessage" />
    <div id="container">
        @if (String.IsNullOrWhiteSpace(Model.SearchedName))
        {
            <input id="search-name" class="form-control" placeholder="Search by name..." asp-for="@Model.SearchedName" />
        }
        else
        {
            <input id="search-name" class="form-control" value="@Model.SearchedName" asp-for="@Model.SearchedName" />
        }

    <div id="search-range" class="d-flex date-pair">
        <input type="text" class="form-control date start col-md-3 mr-1" value="@Model.SearchedStartDate.ToString("yyyy-MM-dd")" asp-for="@Model.SearchedStartDate" />
        <input type="text" class="form-control time start col-md-2" value="@Model.SearchedStartTime.ToString(@"hh\:mm")" asp-for="@Model.SearchedStartTime" />
        <div class="centered ml-1 mr-1 col-md-1"><span>-</span></div>
        <input type="text" class="form-control date end col-md-3 mr-1" value="@Model.SearchedEndDate.ToString("yyyy-MM-dd")" asp-for="@Model.SearchedEndDate" />
        <input type="text" class="form-control time end col-md-2" value="@Model.SearchedEndTime.ToString(@"hh\:mm")" asp-for="@Model.SearchedEndTime" />
    </div>

        <select id="search-position" class="form-control" asp-items="@(new SelectList(Model.Positions, "Id", "Name", Model.SearchedPositionId))" asp-for="@Model.SearchedPositionId" required>
        </select>

        <button id="search-button" class="btn btn-primary" asp-route-viewType="completed" asp-page-handler="Search"><i class="fas fa-search"></i></button>
        <button type="button" id="add-time" onclick="$('#add-time-modal').modal()" class="btn btn-primary"><i class="fas fa-plus"></i> Entry</button>
    </div>
    <br />
    <table class="table">
        <colgroup>
            <col style="width: 15%; vertical-align: middle" />
            <col style="width: 15%; vertical-align: middle" />
            <col style="width: 15%; vertical-align: middle" />
            <col style="width: 15%; vertical-align: middle" />
            <col style="width: 20%; vertical-align: middle" />
            <col style="width: 15%; vertical-align: middle; text-align: right" />
        </colgroup>
        <thead>
            <tr>
                <th>Volunteer</th>
                <th>Position</th>
                <th>Start (yyyy-mm-dd hh:ss)</th>
                <th>End (yyyy-mm-dd hh:ss)</th>
                <th>Duration</th>
                <th></th>
            </tr>
        </thead>
        @foreach (var ct in Model.ClockedTimes)
        {
            <tr class="date-pair">
                <td>
                    <!--this is for the delete modal-->
                    <input id="entry-id-@ct.Id" type="hidden" value="@ct.Id" />
                    <input class="form-control"
                           name="entry-volunteer-@ct.Id"
                           type="text"
                           asp-for="@Model.VolunteerNameForAdd"
                           id="entry-volunteer-@ct.Id"
                           value="@ct.Volunteer.FullNameWithID"
                           list="volunteers"
                           required
                           readonly>
                </td>
                <td>
                    <input class="form-control"
                           name="entry-position-@ct.Id"
                           type="text"
                           asp-for="@Model.PositionNameForAdd"
                           id="entry-position-@ct.Id"
                           value="@ct.Position.Name"
                           list="positions"
                           required
                           readonly>
                </td>
                <td>
                    <div class="d-flex">
                        <input name="entry-startdate-@ct.Id" id="entry-startdate-@ct.Id" class="form-control date start col-md-8 mr-1" type="text" value="@ct.StartTime.Date.ToString("yyyy-MM-dd")" readonly/>
                        <input name="entry-starttime-@ct.Id" id="entry-starttime-@ct.Id" class="form-control time start col-md-4" type="text" value="@ct.StartTime.TimeOfDay.ToString(@"hh\:mm")" readonly/>
                    </div>
                </td>
                <td>
                    <div class="d-flex">
                        <input name="entry-enddate-@ct.Id" id="entry-enddate-@ct.Id" class="form-control date end col-md-8 mr-1" type="text" value="@ct.EndTime?.Date.ToString("yyyy-MM-dd")" readonly/>
                        <input name="entry-endtime-@ct.Id" id="entry-endtime-@ct.Id" class="form-control time end col-md-4" type="text" value="@ct.EndTime?.TimeOfDay.ToString(@"hh\:mm")" readonly/>
                    </div>
                </td>
                <td>
                    <span>
                        @{
                            string durationString = "";
                            if (ct.EndTime.HasValue)
                            {
                                TimeSpan? duration = ct.EndTime.Value.Subtract(ct.StartTime);
                                int? days = duration?.Days;
                                int? hours = duration?.Hours;
                                int? minutes = duration?.Minutes;
                                int? seconds = duration?.Seconds;
                                durationString = $"{days} days, {hours} hours, {minutes} minutes, {seconds} seconds";
                            }
                        }
                        @durationString
                    </span>
                </td>
                <td style="text-align: right;">
                    <div class="btn-group unselected-buttons">
                        <button type="button" class="btn btn-sm entry-edit-button btn-primary" onclick="makeEntryEditable(@ct.Id, false);">Edit</button>
                        @if (await userManager.IsInRoleAsync(await userManager.FindByIdAsync(userManager.GetUserId(User)), "Admin"))
                        {
                            <button type="button" class="btn btn-sm entry-delete-button btn-danger" onclick="openDeleteModal(@ct.Id)">Delete</button>
                        }
                    </div>
                    <div class="btn-group" style="display: none;" id="entry-selected-@ct.Id">
                        <button class="btn btn-sm btn-primary" asp-route-id="@ct.Id" asp-page-handler="SaveChanges">Save Changes</button>
                        <button type="button" onclick="cancelEntryEdit(@ct.Id)" class="btn btn-sm btn-danger">Cancel</button>
                    </div>
                </td>
            </tr>
        }
    </table>
</form>


<!--modal for adding a new time-->
<form class="shift-form" method="post">
    <div id="add-time-modal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="modalTitle" class="modal-title">Add New Time Entry</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
                </div>
                <div class="modal-body">
                    <div id="add-time-container">
                        <label id="add-time-position-label">Position</label>
                        <input class="form-control"
                               type="text"
                               asp-for="@Model.PositionNameForAdd"
                               id="add-time-position"
                               list="positions"
                               required>
                        <label id="add-time-volunteer-label">Volunteer</label>
                        <input class="form-control"
                               type="text"
                               asp-for="@Model.VolunteerNameForAdd"
                               list="volunteers"
                               id="add-time-volunteer"
                               required>


                        <label id="add-time-start-label">Start (yyyy-mm-dd hh:ss)</label>
                        <label id="add-time-end-label">End (yyyy-mm-dd hh:ss)</label>

                        <div id="datetime-fields" class="date-pair d-flex">
                            <input id="add-time-startdate" type="text" class="form-control date start col-md-3 mr-1" value="@Model.EntryStartDate.ToString("yyyy-MM-dd")" asp-for="@Model.EntryStartDate" />
                            <input id="add-time-starttime" type="text" class="form-control time start col-md-2" value="@Model.EntryStartTime.ToString(@"hh\:mm")" asp-for="@Model.EntryStartTime" />
                            <div class="row align-items-center justify-content-center col-md-2" id="add-time-separator"><span>-</span></div>
                            <input id="add-time-startdate" type="text" class="form-control date end col-md-3 mr-1" value="@Model.EntryEndDate.ToString("yyyy-MM-dd")" asp-for="@Model.EntryEndDate" />
                            <input id="add-time-starttime" type="text" class="form-control time end col-md-2" value="@Model.EntryEndTime.ToString(@"hh\:mm")" asp-for="@Model.EntryEndTime" />
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" asp-page-handler="AddEntry">Add</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" >Cancel</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div id="delete-entry-prompt" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="modalTitle" class="modal-title">Attention</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
            </div>
            <div class="modal-body">
                <p>You are about to delete a time entry. Would you like to continue?</p>
            </div>
            <div class="modal-footer">
                <form method="post">
                    <input id="entry-id-modal" type="hidden" asp-for="@Model.DeleteClockedTimeId" />
                    <button class="btn btn-danger" asp-page-handler="DeleteTime">Delete</button>
                </form>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="handleDeletePromptDismiss()">Never mind</button>
            </div>
        </div>
    </div>
</div>
<datalist id="volunteers"></datalist>
<datalist id="positions"></datalist>

<script src="~/js/clockedtime_edit_entries.js"></script>
<script>

    // initialize input widgets first
    $('.time').timepicker({
        'showDuration': true,
        'timeFormat': 'G:i',
        'show2400': true,
        'maxTime': '23:59',
        'defaultTimeDelta': '60000',
        'step': '15',
        'disableTextInput': true
    });

    $('.date').datepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        todayHighlight: true
    });

    // initialize datepair
    $('.date-pair').datepair();

    document.getElementById('completed-tab').classList.add('active');
    document.getElementById('current-tab').classList.remove('active');

    let volunteers = new Array();
    @foreach (var volunteer in Model.Volunteers)
    {
        <text>volunteers.push('</text>@volunteer.FullNameWithID<text>');</text>
    }

    let options = '';

    for (var i = 0; i < volunteers.length; i++) {
        options += '<option value="' + volunteers[i] + '">';
    }

    document.getElementById('volunteers').innerHTML = options;

    let positions = new Array();
    @foreach (var position in Model.Positions.Where(p => p.Name != "All" && !p.Deleted))
    {
        <text>positions.push('</text>@position.Name<text>');</text>
    }

    options = '';

    for (var i = 0; i < positions.length; i++) {
        options += '<option value="' + positions[i] + '">';
    }

    document.getElementById('positions').innerHTML = options;

    function openDeleteModal(id) {
        $('#delete-entry-prompt').modal();
        let test = document.getElementById("entry-id-modal");
        let test1 = document.getElementById("entry-id-" + id);
        document.getElementById("entry-id-modal").value = document.getElementById("entry-id-" + id).value;
    }
</script>
