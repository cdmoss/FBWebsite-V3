@page
@model MHFoodBank.Web.Areas.Admin.Pages.TimeClock.CurrentModel
@{
}
@{
    Layout = "~/Areas/Admin/Pages/Timesheets/Shared/_Layout.cshtml"; ;
    ViewData["Title"] = "Time Sheets";
}
<form method="post">
    <partial name="_AdminStatusMessage" for="StatusMessage" />
    <div id="container-current">
        @if (String.IsNullOrWhiteSpace(Model.SearchedName))
        {
            <input id="search-name-current" class="form-control" placeholder="Search by name..." asp-for="@Model.SearchedName" />
        }
        else
        {
            <input id="search-name-current" class="form-control" value="@Model.SearchedName" asp-for="@Model.SearchedName" />
        }

        <select id="search-position-current" class="form-control" asp-items="@(new SelectList(Model.Positions, "Id", "Name", Model.SearchedPositionId))" asp-for="@Model.SearchedPositionId" required>
        </select>

        <button id="search-button-current" class="btn btn-primary" asp-route-viewType="current" asp-page-handler="Search"><i class="fas fa-search"></i></button>
    </div>
    <br />
    <table class="table">
        <colgroup>
            <col style="width: 20%; vertical-align: middle" />
            <col style="width: 20%; vertical-align: middle" />
            <col style="width: 20%; vertical-align: middle" />
            <col style="width: 20%; vertical-align: middle" />
            <col style="width: 20%; vertical-align: middle; text-align: right" />
        </colgroup>
        <thead>
            <tr>
                <th>Volunteer</th>
                <th>Position</th>
                <th>Start Date/Time</th>
                <th>Duration</th>
                <th></th>
            </tr>
        </thead>
        @foreach (var ct in Model.ClockedTimes)
        {
            <tr>
                <td>
                    <!--this is for the delete modal-->
                    <input id="clockout-id-@ct.Id" type="hidden" value="@ct.Id" />
                    <input class="form-control"
                           name="entry-volunteer-@ct.Id"
                           type="text"
                           asp-for="@Model.VolunteerNameForAdd"
                           id="entry-volunteer-@ct.Id"
                           value="@ct.Volunteer.FullNameWithID"
                           list="volunteers"
                           required readonly>
                </td>
                <td>
                    <input class="form-control"
                           name="entry-position-@ct.Id"
                           type="text"
                           asp-for="@Model.PositionNameForAdd"
                           id="entry-position-@ct.Id"
                           value="@ct.Position.Name"
                           list="positions"
                           required readonly>
                </td>
                <td>
                    @*<input name="entry-date-@ct.Id" id="entry-date-@ct.Id" class="form-control" type="date" value="@ct.StartTime.ToString("yyyy-MM-dd")" readonly />*@

                    <div>
                        <div class="input-group date datetimepicker-datetime-start-entry" id="dtp-timeclock-entry-start-@ct.Id" data-target-input="nearest">
                            <input name="entry-starttime-@ct.Id" id="entry-starttime-@ct.Id" class="form-control datetimepicker-input" type="text" asp-for="@ct.StartTime" value="@ct.StartTime.ToString("yyyy-MM-dd HH:mm")" data-target="#dtp-timeclock-entry-start-@ct.Id" readonly />
                            <div class="input-group-append" data-target="#dtp-timeclock-entry-start-@ct.Id" data-toggle="datetimepicker">
                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                            </div>
                        </div>
                    </div>
                </td>
                <td>
                    <span>
                        @{
                            string durationString = "";
                            if (ct.EndTime.HasValue)
                            {
                                TimeSpan? duration = ct.EndTime.Value.Subtract(ct.StartTime);
                                int? days = duration?.Days;
                                int? hours = duration?.Hours;
                                int? minutes = duration?.Minutes;
                                int? seconds = duration?.Seconds;
                                durationString = $"{days} days, {hours} hours, {minutes} minutes, {seconds} seconds";
                            }
                        }
                        @durationString
                    </span>
                </td>
                <td style="text-align: right;">
                    <div class="btn-group unselected-buttons">
                        <button type="button" class="btn btn-sm entry-edit-button btn-primary" onclick="makeEntryEditable(@ct.Id, true)">Edit</button>
                        <button type="button" onclick="openClockOutModal(@ct.Id)" class="btn btn-sm entry-edit-button btn-secondary">Clock out</button>
                        <button type="button" class="btn btn-sm entry-delete-button btn-danger" onclick="openDeleteModal(@ct.Id)">Delete</button>
                    </div>
                    <div class="btn-group" style="display: none;" id="entry-selected-@ct.Id">
                        <button class="btn btn-sm btn-primary" asp-route-id="@ct.Id" asp-page-handler="SaveChanges">Save Changes</button>
                        <button type="button" onclick="cancelEntryEdit(@ct.Id)" class="btn btn-sm btn-danger">Cancel</button>
                    </div>
                </td>
            </tr>
        }
    </table>

    <div id="delete-entry-prompt" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="modalTitle" class="modal-title">Attention</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
                </div>
                <div class="modal-body">
                    <p>You are about to delete a time entry. Would you like to continue?</p>
                </div>
                <div class="modal-footer">
                    <input id="clockout-id-modal" type="hidden" asp-for="@Model.SelectedClockedTimeId" />
                    <button class="btn btn-danger" asp-page-handler="DeleteTime">Delete</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="handleDeletePromptDismiss()">Never mind</button>
                </div>
            </div>
        </div>
    </div>

    <div id="clockout-volunteer-prompt" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="modalTitle" class="modal-title">Clock out</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
                </div>
                <div class="modal-body">
                    <p>Enter the time that the volunteer should be clocked out at:</p>

                    <div>
                        <div class="input-group date" id="dtp-clockout-volunteer-endtime" data-target-input="nearest">
                            <input id="timeclock-clockout-endtime" type="text" class="form-control datetimepicker-input" value="@Model.ManualClockOutTime" asp-for="@Model.ManualClockOutTime" data-target="#dtp-clockout-volunteer-endtime" />
                            <div class="input-group-append" data-target="#dtp-clockout-volunteer-endtime" data-toggle="datetimepicker">
                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input id="clockout-id-modal" type="hidden" asp-for="@Model.SelectedClockedTimeId" />
                    <button class="btn btn-secondary" asp-page-handler="ClockOutVolunteer">Clock out</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="handleDeletePromptDismiss()">Never mind</button>
                </div>
            </div>
        </div>
    </div>
</form>

<datalist id="volunteers"></datalist>
<datalist id="positions"></datalist>
<script src="~/js/clockedtime_edit_entries.js"></script>
<script>

    document.getElementById('completed-tab').classList.remove('active');
    document.getElementById('current-tab').classList.add('active');

    let volunteers = new Array();
    @foreach (var volunteer in Model.Volunteers)
    {
        <text>volunteers.push('</text>@volunteer.FullNameWithID<text>');</text>
    }

    let options = '';

    for (var i = 0; i < volunteers.length; i++) {
        options += '<option value="' + volunteers[i] + '">';
    }

    document.getElementById('volunteers').innerHTML = options;

    let positions = new Array();
    @foreach (var position in Model.Positions.Where(p => p.Name != "All" && !p.Deleted))
    {
        <text>positions.push('</text>@position.Name<text>');</text>
    }

    options = '';

    for (var i = 0; i < positions.length; i++) {
        options += '<option value="' + positions[i] + '">';
    }

    document.getElementById('positions').innerHTML = options;

    function openClockOutModal(id) {
        $('#clockout-volunteer-prompt').modal();
        document.getElementById("clockout-id-modal").value = document.getElementById("clockout-id-" + id).value;
    }

    function openDeleteModal(id) {
        $('#delete-entry-prompt').modal();
        document.getElementById("clockout-id-modal").value = document.getElementById("clockout-id-" + id).value;
    }

    $('.datetimepicker-datetime-start-entry').datetimepicker({
        format: 'YYYY-MM-DD HH:mm'
    });

    $('#dtp-clockout-volunteer-endtime').datetimepicker({
        date: moment(),
        format: 'YYYY-MM-DD HH:mm'
    });

    $('.datetimepicker-time-start').datetimepicker(
    {
        format: 'HH:mm',
    });

    $(".datetimepicker-time-start").on("change.datetimepicker", function (e) {
        const endTimeDiv = this.parentElement.parentElement.parentElement.getElementsByClassName('datetimepicker-time-end')[0];
        $(endTimeDiv).datetimepicker('minDate', moment({ h: e.date.hour(), m: e.date.minutes() - 1 }));
    });
</script>
