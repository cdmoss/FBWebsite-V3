@page
@model MHFoodBank.Web.Areas.Admin.Pages.TimeClockModel
@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = "Time Sheets";
}

@section Styles {
    <link href="~/css/timeclock_main.css" rel="stylesheet" />
    <link href="~/css/timeclock_modal.css" rel="stylesheet" />
    <link href="~/lib/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.css" rel="stylesheet" />
}

<form method="post">
    <div class="ml-5 mr-5">
        <partial name="_AdminStatusMessage" for="StatusMessage" />
        <div id="container">
            @if (String.IsNullOrWhiteSpace(Model.SearchedName))
            {
                <input id="search-name" class="form-control" placeholder="Search by name..." asp-for="@Model.SearchedName" />
            }
            else
            {
                <input id="search-name" class="form-control" value="@Model.SearchedName" asp-for="@Model.SearchedName" />
            }

            <div>
                <div class="input-group date datetimepicker-datetime-link-start" id="dtp-timeclock-search-start" data-target-input="nearest">
                    <input id="search-date-range-start" type="text" class="form-control datetimepicker-input datetime-readonly" value="@Model.SearchedStartDate.ToString("yyyy-MM-dd HH:mm")" asp-for="@Model.SearchedStartDate" data-target="#dtp-timeclock-search-start" readonly="readonly" />
                    <div class="input-group-append" data-target="#dtp-timeclock-search-start" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>

            <div class="centered" id="date-separator"><span>-</span></div>

            <div>
                <div class="input-group date datetimepicker-datetime-link-end" id="dtp-timeclock-search-end" data-target-input="nearest">
                    <input id="search-date-range-end" type="text" class="form-control datetimepicker-input datetime-readonly" value="@Model.SearchedEndDate.ToString("yyyy-MM-dd HH:mm")" asp-for="@Model.SearchedEndDate" data-target="#dtp-timeclock-search-end" readonly="readonly" />
                    <div class="input-group-append" data-target="#dtp-timeclock-search-end" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>

            @if (@Model.SearchedPosition == null)
            {
                <select id="search-position" class="form-control" asp-items="@(new SelectList(Model.Positions, "Id", "Name", Model.DefaultPosition.Id))" asp-for="@Model.SearchedPosition.Id" required>
                </select>
            }
            else
            {
                <select id="search-position" class="form-control" asp-items="@(new SelectList(Model.Positions, "Id", "Name", Model.SearchedPosition.Id))" asp-for="@Model.SearchedPosition.Id" required>
                </select>
            }
            <button id="search-button" class="btn btn-primary" asp-page-handler="Search"><i class="fas fa-search"></i></button>
            <button type="button" id="add-time" onclick="$('#add-time-modal').modal()" class="btn btn-primary"><i class="fas fa-plus"></i> Entry</button>
        </div>
        <br />
        <table class="table">
            <colgroup>
                <col style="width: 15%; vertical-align: middle" />
                <col style="width: 15%; vertical-align: middle" />
                <col style="width: 10%; vertical-align: middle" />
                <col style="width: 10%; vertical-align: middle" />
                <col style="width: 10%; vertical-align: middle" />
                <col style="width: 20%; vertical-align: middle" />
                <col style="width: 15%; vertical-align: middle; text-align: right" />
            </colgroup>
            <thead>
                <tr>
                    <th>Volunteer</th>
                    <th>Position</th>
                    <th>Date</th>
                    <th>Start</th>
                    <th>End</th>
                    <th>Duration</th>
                    <th></th>
                </tr>
            </thead>
            @foreach (var ct in Model.ClockedTimes)
            {
                <tr>
                    <td>
                        <!--this is for the delete modal-->
                        <input id="entry-id-@ct.Id" type="hidden" value="@ct.Id" />
                        <select name="entry-volunteer-@ct.Id"
                                class="form-control"
                                id="entry-volunteer-@ct.Id"
                                asp-items="@(new SelectList(Model.Volunteers, "Id", "FullNameWithID", ct.Volunteer.Id))"
                                value="@ct.Volunteer.Id"
                                disabled>
                        </select>
                    </td>
                    <td>
                        <select name="entry-position-@ct.Id" id="entry-position-@ct.Id" class="form-control" asp-items="@(new SelectList(Model.Positions.Where(p => p.Name != "All"), "Id", "Name", ct.Position.Id))" disabled>
                        </select>
                    </td>
                    <td><input name="entry-date-@ct.Id" id="entry-date-@ct.Id" class="form-control" type="date" value="@ct.StartTime.ToString("yyyy-MM-dd")" readonly /></td>
                    <td>
                        <div class="form-group">
                            <div class="input-group date datetimepicker-time-start" id="dtp-entry-starttime-@ct.Id" data-target-input="nearest">
                                <input name="entry-starttime-@ct.Id" id="entry-starttime-@ct.Id" type="text" class="form-control datetimepicker-input" value="@ct.StartTime.TimeOfDay.ToString(@"hh\:mm")" readonly data-target="#dtp-entry-starttime-@ct.Id" />
                                <div class="input-group-append" data-target="#dtp-entry-starttime-@ct.Id" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="far fa-clock"></i></div>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            <div class="input-group date datetimepicker-time-end" id="dtp-entry-endtime-@ct.Id" data-target-input="nearest">
                                <input name="entry-endtime-@ct.Id" id="entry-endtime-@ct.Id" type="text" class="form-control datetimepicker-input" value="@ct.EndTime?.TimeOfDay.ToString(@"hh\:mm")" readonly data-target="#dtp-entry-endtime-@ct.Id" />
                                <div class="input-group-append" data-target="#dtp-entry-endtime-@ct.Id" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="far fa-clock"></i></div>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <span>
                            @{
                                string durationString = "";
                                if (ct.EndTime.HasValue)
                                {
                                    TimeSpan? duration = ct.EndTime.Value.Subtract(ct.StartTime);
                                    int? days = duration?.Days;
                                    int? hours = duration?.Hours;
                                    int? minutes = duration?.Minutes;
                                    int? seconds = duration?.Seconds;
                                    durationString = $"{days} days, {hours} hours, {minutes} minutes, {seconds} seconds";
                                }
                            }
                            @durationString
                        </span>
                    </td>
                    <td style="text-align: right;">
                        <div class="btn-group unselected-buttons">
                            <button type="button" class="btn btn-sm entry-edit-button btn-primary" onclick="makeEntryEditable(@ct.Id)">Edit</button>
                            <button type="button" class="btn btn-sm entry-delete-button btn-danger" onclick="openDeleteModal(@ct.Id)">Delete</button>
                        </div>
                        <div class="btn-group" style="display: none;" id="entry-selected-@ct.Id">
                            <button class="btn btn-sm btn-primary" asp-route-id="@ct.Id" asp-page-handler="SaveChanges">Save Changes</button>
                            <button type="button" onclick="cancelEntryEdit(@ct.Id)" class="btn btn-sm btn-danger">Cancel</button>
                        </div>
                    </td>
                </tr>
            }
        </table>
    </div>
</form>
<!--modal for adding a new time-->
<form class="shift-form" method="post">
    <div id="add-time-modal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="modalTitle" class="modal-title">Add New Time Entry</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
                </div>
                <div class="modal-body">
                    <div id="add-time-container">
                        <label id="add-time-position-label">Position</label>
                        <select class="form-control"
                                asp-items="@(new SelectList(Model.Positions.Where(p => p.Name != "All"), "Id", "Name"))"
                                id="add-time-position"
                                asp-for="@Model.SelectedPositionId"
                                required>
                        </select>
                        <label id="add-time-volunteer-label">Volunteer</label>
                        <select class="form-control"
                                id="add-time-volunteer"
                                asp-items="@(new SelectList(Model.Volunteers, "Id", "FullNameWithID"))"
                                asp-for="@Model.AddVolunteerId"
                                required>
                        </select>

                        <label id="add-time-start-label">Start</label>

                        <div id="add-time-start">
                            <div class="input-group date datetimepicker-datetime-link-start" id="dtp-timeclock-entry-start" data-target-input="nearest">
                                <input id="timeclock-entry-start" type="text" class="form-control datetimepicker-input datetime-readonly" value="@Model.EntryStartDate" asp-for="@Model.EntryStartDate" data-target="#dtp-timeclock-entry-start" readonly="readonly" />
                                <div class="input-group-append" data-target="#dtp-timeclock-entry-start" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>

                        <div class="row align-items-center justify-content-center" id="add-time-separator"><span>-</span></div>

                        <label id="add-time-end-label">End</label>

                        <div id="add-time-end">
                            <div class="input-group date datetimepicker-datetime-link-end" id="dtp-timeclock-entry-end" data-target-input="nearest">
                                <input id="timeclock-entry-end" type="text" class="form-control datetimepicker-input datetime-readonly" value="@Model.EntryEndDate" asp-for="@Model.EntryEndDate" data-target="#dtp-timeclock-entry-end" readonly="readonly" />
                                <div class="input-group-append" data-target="#dtp-timeclock-entry-end" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" asp-page-handler="AddEntry">Add</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="handleDeletePromptDismiss()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div id="delete-entry-prompt" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="modalTitle" class="modal-title">Attention</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
            </div>
            <div class="modal-body">
                <p>You are about to delete a time entry. Would you like to continue?</p>
            </div>
            <div class="modal-footer">
                <form method="post">
                    <input id="entry-id-modal" type="hidden" asp-for="@Model.SelectedClockedTimeId" />
                    <button class="btn btn-danger" asp-page-handler="DeleteTime">Delete</button>
                </form>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="handleDeletePromptDismiss()">Never mind</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/clockedtime_edit_entries.js"></script>
<script>
    const entries = document.getElementsByTagName('TR');
    Array.from(entries).forEach(function (row) {
        if (row.getElementsByTagName('TH').length === 0) {
            const endTimeDiv = row.getElementsByClassName('datetimepicker-time-end')[0];
            const endTimeStr = endTimeDiv.getElementsByTagName('INPUT')[0].value;
            const endTime = moment(endTimeStr, "HH:mm");

            const startTimeDiv = row.parentElement.getElementsByClassName('datetimepicker-time-start')[0]
            const startTimeStr = startTimeDiv.getElementsByTagName('INPUT')[0].value;
            const startTime = moment(startTimeStr, "HH:mm");

            $(endTimeDiv).datetimepicker(
                {
                    format: "HH:mm",
                    minDate: moment({ h: startTime.hour(), m: startTime.minutes() })
                }
            );

            $(startTimeDiv).datetimepicker(
                {
                    format: "HH:mm",
                    maxDate: moment({ h: endTime.hour(), m: endTime.minutes() })
                }
            );
        }
    });

    function openDeleteModal(id) {
        $('#delete-entry-prompt').modal();
        document.getElementById("entry-id-modal").value = document.getElementById("entry-id-" + id).value;
    }

    const searchStart = document.getElementById('search-date-range-start').value;
    const searchEnd = document.getElementById('search-date-range-end').value;

    const entryStart = document.getElementById('timeclock-entry-start').value;
    const entryEnd = document.getElementById('timeclock-entry-end').value;

    $('#dtp-timeclock-search-start').datetimepicker({
        ignoreReadonly: true,
        maxDate: searchEnd,
        format: 'YYYY-MM-DD HH:mm'
    });

    $('#dtp-timeclock-search-end').datetimepicker({
        ignoreReadonly: true,
        minDate: searchStart,
        format: 'YYYY-MM-DD HH:mm'
    });

    $('#dtp-timeclock-entry-start').datetimepicker({
        ignoreReadonly: true,
        date: moment(),
        maxDate: entryEnd,
        format: 'YYYY-MM-DD HH:mm'
    });

    $('#dtp-timeclock-entry-end').datetimepicker({
        ignoreReadonly: true,
        date: moment().add(5, 'hours'),
        minDate: entryStart,
        format: 'YYYY-MM-DD HH:mm'
    });

    $('.datetimepicker-time-start').datetimepicker(
        {
            format: 'HH:mm',
        });

    $('.datetimepicker-time-end').datetimepicker(
        {
            format: 'HH:mm'
        });

    $(".datetimepicker-time-start").on("show.datetimepicker", function (e) {
        const endTimeDiv = this.parentElement.parentElement.parentElement.getElementsByClassName('datetimepicker-time-end')[0];
        $(endTimeDiv).datetimepicker('minDate', moment({ h: e.date.hour(), m: e.date.minutes() - 1 }));
    });

    $(".datetimepicker-time-end").on("show.datetimepicker", function (e) {
        const startTimeDiv = this.parentElement.parentElement.parentElement.getElementsByClassName('datetimepicker-time-start')[0]
        $(startTimeDiv).datetimepicker('maxDate', moment({ h: e.date.hour(), m: e.date.minutes() - 1 }));
    });

    $(".datetimepicker-time-start").on("change.datetimepicker", function (e) {
        const endTimeDiv = this.parentElement.parentElement.parentElement.getElementsByClassName('datetimepicker-time-end')[0];
        $(endTimeDiv).datetimepicker('minDate', moment({ h: e.date.hour(), m: e.date.minutes() - 1 }));
    });

    $(".datetimepicker-time-end").on("change.datetimepicker", function (e) {
        const startTimeDiv = this.parentElement.parentElement.parentElement.getElementsByClassName('datetimepicker-time-start')[0]
        $(startTimeDiv).datetimepicker('maxDate', moment({ h: e.date.hour(), m: e.date.minutes() - 1 }));
    });
</script>
<script src="~/js/datetimepickers.js"></script>
