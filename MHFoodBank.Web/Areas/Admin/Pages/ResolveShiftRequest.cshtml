@page
@using MHFoodBank.Common
@model MHFoodBank.Web.Areas.Admin.Pages.ResolveShiftRequestModel
@{
    ViewData["Title"] = "ResolveShiftRequest";
    Layout = "~/Areas/Admin/Pages/Shared/_Layout.cshtml";
}

    <script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            height: 750,
            nowIndicator: true,
            plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'rrule'],
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            eventClick: function (shiftinfo, jsEvent, view) {
                $('#calendarModalView').modal();
                var arrDate = new Date(shiftinfo.event.start);
                var arrEndDate = new Date(shiftinfo.event.end);

                document.getElementById("ShiftID").value = shiftinfo.event.id;
                document.getElementById("ShiftDate").value = moment(arrDate).format('yyyy-MM-DD');
                document.getElementById("dateTimeStart").value = moment(arrDate).format('HH:mm');
                document.getElementById("dateTimeEnd").value = moment(arrEndDate).format('HH:mm');
                document.getElementById("POS").selectedIndex = shiftinfo.event.extendedProps.posWorked;
            },
            defaultDate: '@Model.ShiftRequest.OriginalShift.StartDate.ToString("yyyy-MM-dd")',
            navLinks: true, // can click day/week names to navigate views
            selectMirror: true,
            allDaySlot: false,
            weekNumbers: true,
            weekNumbersWithinDays: true,
            weekNumberCalculation: 'ISO',
            firstDay: 0,
            eventLimit: true, // allow "more" link when too many events
            eventSources: [
                @if (Model.AssignedShifts != null)
                {
                <text>
                {
                    // displays existing shifts that are assigned
                    events: [
                        @foreach (var s in Model.AssignedShifts)
                        {
                        <text>
                            {
                                id: '@s.Id',
                                title: '@s.Description',
                                @if (s.RecurrenceRule != null)
                            {
                                <text>
                                    rrule: '@s.RecurrenceRule',
                                    duration: '@((s.EndTime - s.StartTime).ToString())',
                                </text>
                            }
                            else
                            {
                                <text>
                                    start: '@s.StartDate.ToString("yyyy-MM-dd")@{string y = "T"; @y}@s.StartTime',
                                    end: '@s.StartDate.ToString("yyyy-MM-dd")@y@s.EndTime',
                                </text>
                            }
                            posWorked: '@(s.PositionWorked.Id)',
                            vol: '@s.Volunteer.Id'
                            },
                        </text>
                        }
                    ],
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        meridiem: false
                    }
                },
                </text>
                }
                @if (Model.OpenShifts != null)
                {
                <text>
                {
                    // displays existing shifts that are open
                    events: [
                        @foreach (var s in Model.OpenShifts)
                        {
                            <text>
                            {
                            id: '@s.Id',
                            title: '@s.Description',
                            @if (s.RecurrenceRule != null)
                            {
                                <text>
                                rrule: '@s.RecurrenceRule',
                                duration: '@((s.EndTime - s.StartTime).ToString())',
                                </text>
                            }
                            else
                            {
                                <text>
                                    start: '@s.StartDate.ToString("yyyy-MM-dd")@{string y = "T"; @y}@s.StartTime',
                                    end: '@s.StartDate.ToString("yyyy-MM-dd")@y@s.EndTime',
                                </text>
                            }
                            posWorked: '@(s.PositionWorked.Id)',
                            vol: 'Open'
                            },
                            </text>
                        }
                    ],
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        meridiem: false
                    },
                    color: '#06A893'
                },
                </text>
                }
                // displays the requested shift if it's a switch request
                @if (Model.ShiftRequest.RequestedShift != null)
                {
                <text>
                {
                    events: [
                        {
                            id: '@Model.ShiftRequest.RequestedShift.Id',
                            title: '@Model.ShiftRequest.RequestedShift.Description',
                            start: '@Model.ShiftRequest.RequestedShift.StartDate.ToString("yyyy-MM-dd")@{string y3 = "T"; @y3}@Model.ShiftRequest.RequestedShift.StartTime',
                            end: '@Model.ShiftRequest.RequestedShift.StartDate.ToString("yyyy-MM-dd")@y3@Model.ShiftRequest.RequestedShift.EndTime',
                            posWorked: '@(Model.ShiftRequest.RequestedShift.PositionWorked.Id)',

                            // requested shift is worked by someone
                            @if (Model.ShiftRequest.RequestedShift.Volunteer != null)
                            {
                                <text>vol: '@((int)Model.ShiftRequest.RequestedShift.Volunteer.Id)'</text>
                            }
                            // requested is open
                            else
                            {
                                <text>vol: 'Open'</text>
                            }
                        }
                    ],
                    color: 'green',
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        meridiem: false
                    }
                },
                </text>
                }
                {
                    // displays the original shift
                    events: [
                        {
                            id: '@Model.ShiftRequest.OriginalShift.Id',
                            title: '@Model.ShiftRequest.OriginalShift.Description',
                            start: '@Model.ShiftRequest.OriginalShift.StartDate.ToString("yyyy-MM-dd")@{string y4 = "T"; @y4}@Model.ShiftRequest.OriginalShift.StartTime',
                            end: '@Model.ShiftRequest.OriginalShift.StartDate.ToString("yyyy-MM-dd")@y4@Model.ShiftRequest.OriginalShift.EndTime',
                            posWorked: '@(Model.ShiftRequest.OriginalShift.PositionWorked.Id)',
                            vol: '@((int)Model.ShiftRequest.OriginalShift.Volunteer.Id)'
                        }
                ],
                    color: 'red',
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        meridiem: false
                    }
                }
            ]
        });
        calendar.render();
        $('#calendar').addClass("h-75");
    });
    </script>
    <div class="ml-5 mr-5">
    <div class="row">
                <div class="row mb-1">
                    <div style="background-color: red;" class="col-md-2"></div>
                    <span class="col-md-10">Original shift</span>
                </div>
                <div class="row mb-1">
                    <div style="background-color: green;" class="col-md-2"></div>
                    <span class="col-md-10">Shift to be switched</span>
                </div>
                <div class="row">
                    <div style="background-color: #3788D8;" class="col-md-2"></div>
                    <span class="col-md-10">All other shifts</span>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-2">
                <div>
                    <h4>Original Shift</h4>
                    <dl>
                        <dt>Volunteer</dt>
                        <dd>
                            @Model.ShiftRequest.OriginalShift.Volunteer.FirstName @Model.ShiftRequest.OriginalShift.Volunteer.LastName
                        </dd>
                    </dl>
                    <dl>
                        <dt>Shift Date</dt>
                        <dd type="date" class="" readonly>@Model.ShiftRequest.OriginalShift.StartDate.ToString("yyyy-MM-dd")
                        <dd />
                    </dl>
                    <dl>
                        <dt>Start Time</dt>
                        <dd type="text" class="">@Model.ShiftRequest.OriginalShift.StartTime.ToString(@"hh\:mm")
                        <dd />
                    </dl>
                    <dl>
                        <dt>End Time</dt>
                        <dd type="text" class="">@Model.ShiftRequest.OriginalShift.EndTime.ToString(@"hh\:mm")
                        <dd />
                    </dl>
                    <dl>
                        <dt>Position</dt>
                        <dd type="text" class="">@Model.ShiftRequest.OriginalShift.PositionWorked.Name
                        <dd />
                    </dl>
                    <br />
                    @if (Model.ShiftRequest.RequestedShift != null)
                    {
                        <h4>Requested Shift</h4>
                        <dl>
                            @if (Model.ShiftRequest.RequestedShift.Volunteer != null)
                            {
                                <dt>Volunteer</dt>
                                <dd readonly>@Model.ShiftRequest.RequestedShift.Volunteer.FirstName @Model.ShiftRequest.RequestedShift.Volunteer.LastName</dd>
                            }
                            else
                            {
                                <dt>Open Shift</dt>
                            }
                        </dl>
                        <dl>
                            <dt>Shift Date</dt>
                            <dd type="date" class="" readonly>@Model.ShiftRequest.RequestedShift.StartDate.ToString("yyyy-MM-dd")
                            <dd />
                        </dl>
                        <dl>
                            <dt>Start Time</dt>
                            <dd type="text" class="">@Model.ShiftRequest.RequestedShift.StartTime.ToString(@"hh\:mm")
                            <dd />
                        </dl>
                        <dl>
                            <dt>End Time</dt>
                            <dd type="text" class="">@Model.ShiftRequest.RequestedShift.EndTime.ToString(@"hh\:mm")
                            <dd />
                        </dl>
                        <dl>
                            <dt>Position</dt>
                            <dd type="text" class="">@Model.ShiftRequest.RequestedShift.PositionWorked.Name
                            <dd />
                        </dl>
                    }
                    else
                    {
                        <h4 class="mt-5">Request for Removal</h4>
                    }
                    <hr />
                    @if (Model.ShiftRequest.Status == ShiftRequestAlert.RequestStatus.Pending)
                    {
                        <form method="post">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <button class="btn btn-danger" asp-page-handler="Decline" asp-route-alertId="@Model.ShiftRequest.Id">Decline</button>
                                </div>
                                <div class="form-group col-md-6">
                                    <button class="btn btn-success" asp-page-handler="Accept" asp-route-alertId="@Model.ShiftRequest.Id">Accept</button>
                                </div>
                            </div>
                        </form>
                    }
                    else if (Model.ShiftRequest.Status == ShiftRequestAlert.RequestStatus.Accepted)
                    {
                        <p>This request has been accepted.</p>
                    }
                    else if (Model.ShiftRequest.Status == ShiftRequestAlert.RequestStatus.Declined)
                    {
                        <p>This request has been declined.</p>
                    }
                </div>
            </div>
            <div class="col-md-10">
                <div id="calendar"></div>
            </div>
        </div>

