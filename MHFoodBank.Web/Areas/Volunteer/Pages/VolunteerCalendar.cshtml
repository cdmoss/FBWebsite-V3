@page
@model MHFoodBank.Web.Areas.Volunteer.Pages.VolunteerCalendarModel
@using MHFoodBank.Web.Data.Models;
@using MHFoodBank.Web.Dtos; 
@{
    ViewData["Title"] = "VolunteerCalendar";
    Layout = "~/Areas/Volunteer/Pages/Shared/_Layout.cshtml";
}

<style>
    .fc-content {
        cursor: pointer;
    }
</style>
<script>
        function appendLeadingZeroes(n) {
            if (n <= 9) {
                return "0" + n;
            }
            return n;
        }

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                height: 750,
                nowIndicator: true,
                plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'rrule'],
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                eventClick: function (shiftinfo, jsEvent, view) {
                    var arrDate = new Date(shiftinfo.event.start);
                    var arrEndDate = new Date(shiftinfo.event.end);
                    var isShiftOpen = shiftinfo.event.extendedProps.vol === 'Open';
                    var selectedShiftStartDate = shiftinfo.event.start;

                    $('#shift-modal-assigned').modal();
                    document.getElementById("clicked-shift-date").value = selectedShiftStartDate.getFullYear() + "-" + appendLeadingZeroes(selectedShiftStartDate.getMonth() + 1) + "-" + appendLeadingZeroes(selectedShiftStartDate.getDate());
                    document.getElementById("assigned-shift-id").value = shiftinfo.event.id;
                    document.getElementById("assigned-shift-date").value = arrDate.getFullYear() + "-" + appendLeadingZeroes(arrDate.getMonth() + 1) + "-" + appendLeadingZeroes(arrDate.getDate());
                    document.getElementById("assigned-shift-starttime").value = appendLeadingZeroes(arrDate.getHours()) + ":" + appendLeadingZeroes(arrDate.getMinutes());
                    document.getElementById("assigned-shift-endtime").value = appendLeadingZeroes(arrEndDate.getHours()) + ":" + appendLeadingZeroes(arrEndDate.getMinutes());
                    document.getElementById("assigned-shift-position").value = shiftinfo.event.extendedProps.posWorked;

                    if (!isShiftOpen) {
                        $('#btn-requestShiftChange').prop('style', 'display: block');
                        $('#btn-workThisShift').prop('style', 'display: none');
                    }
                    else {
                        $('#btn-requestShiftChange').prop('style', 'display: none');
                        $('#btn-workThisShift').prop('style', 'display: block');
                    }
                },
                navLinks: true, // can click day/week names to navigate views
                selectMirror: true,
                allDaySlot: false,
                weekNumbers: true,
                firstDay: 0,
                weekNumbersWithinDays: true,
                weekNumberCalculation: 'ISO',
                eventLimit: true, // allow "more" link when too many events
                eventSources: [
                    {
                        events: [
                            @foreach (var s in Model.AssignedShifts.Where(s => s.Volunteer != null))
                            {
                            <text>
                                {
                                    id: '@s.Id',
                                    title: '@s.Description',
                                    @if (s.RecurrenceRule != null)
                                    {
                                        <text>
                                            rrule: '@s.RecurrenceRule',
                                            duration: '@((s.EndTime - s.StartTime).ToString())',
                                        </text>
                                    }
                                    else
                                    {
                                        <text>
                                            start: '@s.StartDate.ToString("yyyy-MM-dd")@{string y = "T"; @y}@s.StartTime',
                                            end: '@s.StartDate.ToString("yyyy-MM-dd")@y@s.EndTime',
                                        </text>
                                    }
                                    posWorked: '@(s.PositionWorked.Id)',
                                    vol: '@s.Volunteer.Id'
                                },
                            </text>
                            }
                        ],
                        eventTimeFormat: {
                            hour: '2-digit',
                            minute: '2-digit',
                            meridiem: false
                        }
                    },
                    {
                        events: [
                            @foreach (var s in Model.OpenShifts)
                            {
                            <text>
                                {
                                    id: '@s.Id',
                                    title: '@s.Description',
                                    @if (s.RecurrenceRule != null)
                                    {
                                        <text>
                                            rrule: '@s.RecurrenceRule',
                                            duration: '@((s.EndTime - s.StartTime).ToString())',
                                        </text>
                                    }
                                    else
                                    {
                                        <text>
                                            start: '@s.StartDate.ToString("yyyy-MM-dd")@{string y = "T"; @y}@s.StartTime',
                                            end: '@s.StartDate.ToString("yyyy-MM-dd")@y@s.EndTime',
                                        </text>
                                    }
                                    posWorked: '@(s.PositionWorked.Id)',
                                    vol: 'Open'
                                },
                            </text>
                            }
                        ],
                        color: '#06A893'
                    }
                ],
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    meridiem: false
                }
            });
            calendar.render();
            $('#calendar').addClass("h-75");
        });

</script>
<div class="ml-5 mr-5">
    <div class="row">
        <h1 class="col-md-4">Schedule</h1>
        <div class="col-md-5"></div>
        <h5 class="col-md-3">Click on a shift to make a shift change request.</h5>
    </div>
    <partial name="_VolunteerStatusMessage" for="StatusMessage" />
    <hr />
    <form method="post">
        <div id="shift-modal-assigned" class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 id="modalTitle" class="modal-title">Viewing Shift</h4>
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
                    </div>
                    <div id="modalBody" class="modal-body">
                        <input type="hidden" id="clicked-shift-date" asp-for="@Model.ClickedShiftDate" />
                        <input type="hidden" id="assigned-shift-id" asp-for="@Model.SelectedShift.Id">

                        <label style="margin-top: 3px; padding-right: 10px;" for="assigned-0shift-date">Shift Date</label>
                        <input value="" type="date" class="form-control" id="assigned-shift-date" asp-for="@Model.SelectedShift.StartDate" readonly>

                        <hr />

                        <label style="margin-top: 3px; padding-right: 10px;" for="assigned-shift-starttime">Start Time</label>
                        <input type="text" class="time form-control" id="assigned-shift-starttime" asp-for="@Model.SelectedShift.StartTime"  readonly>
                        <hr />

                        <label style="margin-top: 3px; padding-right: 10px;">End Time</label>
                        <input type="text" class="time form-control" id="assigned-shift-endtime" asp-for="@Model.SelectedShift.EndTime" readonly>

                        <hr />
                        <label style="margin-top: 3px; padding-right: 10px;">Position Worked</label>
                        <select class="form-control" asp-items="@(new SelectList(Model.Positions.Where(p => p.Name != "All"), "Id", "Name"))" 
                                id="assigned-shift-position"
                                asp-for="@Model.SelectedPositionId"
                                readonly 
                                disabled>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button class="btn btn-primary" id="btn-requestShiftChange" asp-page-handler="RequestChange">Request Shift Change</button>
                        <button class="btn btn-primary" id="btn-workThisShift" asp-page-handler="WorkShift">Work This Shift</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div id='calendar'></div>
</div>

