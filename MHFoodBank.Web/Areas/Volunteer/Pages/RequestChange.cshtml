@page
@using MHFoodBank.Web.Data.Models
@model MHFoodBank.Web.Areas.Volunteer.Pages.RequestChangeModel
@{
    ViewData["Title"] = "RequestChange";
    Layout = "~/Areas/Volunteer/Pages/Shared/_Layout.cshtml";
}
<style>
        .fc-content {
            cursor: pointer;
        }
    </style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            height: 750,
            nowIndicator: true,
            plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'rrule'],
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            eventClick: function (shiftinfo, jsEvent, view) {

                $('#shift-modal').modal();
                var arrDate = new Date(shiftinfo.event.start);
                var arrEndDate = new Date(shiftinfo.event.end);
                document.getElementById("shift-id").value = shiftinfo.event.id;
                document.getElementById("shift-date").value = arrDate.getFullYear() + "-" + appendLeadingZeroes(arrDate.getMonth() + 1) + "-" + appendLeadingZeroes(arrDate.getDate());
                document.getElementById("shift-starttime").value = appendLeadingZeroes(arrDate.getHours()) + ":" + appendLeadingZeroes(arrDate.getMinutes());
                document.getElementById("shift-endtime").value = appendLeadingZeroes(arrEndDate.getHours()) + ":" + appendLeadingZeroes(arrEndDate.getMinutes());
                document.getElementById("shift-position").value = shiftinfo.event.extendedProps.posWorked;

                let isOriginalShift = shiftinfo.event.id === '@Model.OriginalShift.Id';
                let requestChangeButton = document.getElementById("request-change-button");
                let shiftModalTitle = document.getElementById("shift-modal-title");

                if (isOriginalShift) {
                    requestChangeButton.style.display = "none";
                    shiftModalTitle.innerHTML = "Viewing Original Shift"
                }
                else {
                    requestChangeButton.style.display = "block";
                    shiftModalTitle.innerHTML = "Viewing Shift"
                }

            },
            navLinks: true, // can click day/week names to navigate views
            selectMirror: true,
            allDaySlot: false,
            weekNumbers: true,
            weekNumbersWithinDays: true,
            firstDay: 0,
            weekNumberCalculation: 'ISO',
            eventLimit: true, // allow "more" link when too many events
            eventSources: [
                {
                    events: [
                        @foreach (var s in Model.AssignedShifts)
                        {
                            <text>
                                {
                                    id: '@s.Id',
                                    title: '@s.Description',
                                    @if (s.RecurrenceRule != null)
                                    {
                                        <text>
                                            rrule: '@s.RecurrenceRule',
                                            duration: '@((s.EndTime - s.StartTime).ToString())',
                                        </text>
                                    }
                                    else
                                    {
                                        <text>
                                            start: '@s.StartDate.ToString("yyyy-MM-dd")@{string y = "T"; @y}@s.StartTime',
                                            end: '@s.StartDate.ToString("yyyy-MM-dd")@y@s.EndTime',
                                        </text>
                                    }
                                    posWorked: '@(s.PositionWorked.Id)',
                                    vol: '@((int)s.Volunteer.Id)'
                                },
                            </text>
                        }
                    ],
                },
                {
                    events: [
                        {
                            id: '@Model.OriginalShift.Id',
                            title: '@Model.OriginalShift.Description',
                            @if (Model.OriginalIndividualDate > DateTime.Now.AddDays(-1))
                            {
                                <text>
                                start: '@Model.OriginalIndividualDate.ToString("yyyy-MM-dd")@{string y2 = "T"; @y2}@Model.OriginalShift.StartTime.ToString(@"hh\:mm")',
                                </text>
                            }
                            else
                            {
                                <text>
                                start: '@Model.OriginalShift.StartDate.ToString("yyyy-MM-dd")@{string y2 = "T"; @y2}@Model.OriginalShift.StartTime.ToString(@"hh\:mm")',
                                </text>
                            }
                            end: '@Model.OriginalShift.StartDate.ToString("yyyy-MM-dd")"T"@Model.OriginalShift.EndTime.ToString(@"hh\:mm")',
                            posWorked: '@(Model.OriginalShift.PositionWorked.Id)',
                            vol: '@((int)Model.OriginalShift.Volunteer.Id)'
                        }
                    ],
                    color: 'yellow',
                },
                {
                    events: [
                        @foreach (var s in Model.OpenShifts)
                        {
                            <text>
                                {
                                    id: '@s.Id',
                                    title: '@s.Description',
                                    @if (s.RecurrenceRule != null)
                                    {
                                        <text>
                                            rrule: '@s.RecurrenceRule',
                                            duration: '@((s.EndTime - s.StartTime).ToString())',
                                        </text>
                                    }
                                    else
                                    {
                                        <text>
                                            start: '@s.StartDate.ToString("yyyy-MM-dd")@{string y = "T"; @y}@s.StartTime',
                                            end: '@s.StartDate.ToString("yyyy-MM-dd")@y@s.EndTime',
                                        </text>
                                    }
                                    posWorked: '@(s.PositionWorked.Id)',
                                    vol: 'Open'
                                },
                            </text>
                        }
                    ],
                    color: '#06A893',
                }
            ],
            eventTimeFormat: {
                hour: '2-digit',
                minute: '2-digit',
                meridiem: false
            }
        });
        calendar.render();
        $('#calendar').addClass("h-75");
    });

    function appendLeadingZeroes(n) {
        if (n <= 9) {
            return "0" + n;
        }
        return n;
    }
</script>

<form method="post" class="ml-5 mr-5">
    <input type="hidden" value="@Model.OriginalIndividualDate" asp-for="@Model.OriginalIndividualDate" />
    <input type="hidden" value="@Model.OriginalShift.Id" asp-for="OriginalShiftId" />
    <input type="hidden" asp-for="@Model.RequestedShiftId" id="shift-id" />
    <div class="row">
        <h1 class="col-md-4">Request Shift Change</h1>
        <div class="col-md-6"></div>
        <div class="col-md-2">
            <div class="row mb-1">
                <div style="background-color: yellow;" class="col-md-2"></div>
                <span class="col-md-10">Your Shift</span>
            </div>
            <div class="row mb-1">
                <div style="background-color: #3788D8;" class="col-md-2"></div>
                <span class="col-md-10">Other Volunteer's Shifts</span>
            </div>
            <div class="row">
                <div style="background-color: #06A893;" class="col-md-2"></div>
                <span class="col-md-10">Open Shifts</span>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-3">
            <h4 class="mb-4">Original Shift</h4>
            <dl>
                <dt>Shift Date</dt>
                <dd readonly>@Model.OriginalIndividualDate.ToString("yyyy-MM-dd")
                <dd />
            </dl>
            <dl>
                <dt>Start Time</dt>
                <dd type="text" class="">@Model.OriginalShift.StartTime.ToString(@"hh\:mm")
                <dd />
            </dl>
            <dl>
                <dt>End Time</dt>
                <dd type="text" class="">@Model.OriginalShift.EndTime.ToString(@"hh\:mm")
                <dd />
            </dl>
            <dl>
                <dt>Position</dt>
                <dd type="text" class="">@Model.OriginalShift.PositionWorked.Name
                <dd />
            </dl>
            <br />
            <br />
            <h4>Choose a shift from the calendar to switch yours with</h4>
            <br />
            <h5 align="center">or</h5>
            <br />
            <button class="btn btn-danger w-100" asp-page-handler="Remove">Request Shift Removal</button>
        </div>
        <div class="col-md-9" id="calendar"></div>
    </div>
    <div id="shift-modal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="shift-modal-title" class="modal-title">Viewing Shift</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">Close</span></button>
                </div>
                <div id="modalBody" class="modal-body">
                    <input type="hidden" asp-for="@Model.RequestedShiftId" id="shift-id" />
                    <label style="margin-top: 3px; padding-right: 10px;">Shift Date</label>
                    <input type="date" class="form-control" id="shift-date" asp-for="@Model.RequestedIndividualDate" readonly>

                    <hr />

                    <label style="margin-top: 3px; padding-right: 10px;">Start Time</label>
                    <input type="text" class="time form-control" id="shift-starttime" readonly>
                    <hr />

                    <label style="margin-top: 3px; padding-right: 10px;">End Time</label>
                    <input type="text" class="time form-control" id="shift-endtime" readonly>

                    <hr />
                    <label asp-for="@Model.RequestedShift.PositionWorked" style="margin-top: 3px; padding-right: 10px;" for="cmbPositions">Position Worked</label>
                    <select class="form-control" asp-items="@(new SelectList(Model.Positions.Where(p => p.Name != "All"), "Id", "Name"))" id="shift-position" readonly>
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button class="btn btn-primary" id="request-change-button" asp-page-handler="Change">Choose Shift</button>
                </div>
            </div>
        </div>
    </div>
</form>


